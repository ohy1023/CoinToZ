server:
  port : 8081
  servlet:
    encoding:
      force-response: true
spring:
  profiles:
    include: secret

  # multipartFile 용량 늘려주는 설정
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${SPRING_DATASOURCE_URL}
    username: root
    password: 12345678
  security:
    oauth2:
      client:
        registration:
          naver:
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver
          kakao:
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image
            client-name: Kakao
        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  mail:
    host: smtp.naver.com # smtp 서버 주소
    port: 465 # 메일 인증서버 포트
    properties:
      mail.smtp.auth: true
      mail.smtp.ssl.enable: true
      mail.smtp.starttls.enable: true
      mail.smtp.ssl.trust: smtp.naver.com


cloud:
  aws:
    stack:
      auto: false


logging:
  level:
    org.hibernate.SQL: debug    # Logger
    org.hibernate.type: trace   # Show Query Parameter

jwt:
  secretKey: '124215sdfhab8fr98234c2q4g87243cg'

  access:
    expiration: 1800000 # 30분 (1000L(ms -> s) * 60L(s -> m) * 30L)
#    expiration: 60000 # 1분
    header: "Authorization"

  refresh:
    expiration: 1209600000 # 2주 (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> 하루) * 14(2주))
    header: "Authorization-refresh"