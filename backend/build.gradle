buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.1.0'
    //querydsl 추가
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Lombook
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL
    runtimeOnly 'mysql:mysql-connector-java'

    // Spring Security
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'

    // JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // swagger
    implementation "io.springfox:springfox-boot-starter:3.0.0"

    //FeignClient(Upbit API 사용)
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.5'

    //Upbit JWT implementation '
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.16.0'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //email 인증 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.0'

    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Upbit json
    implementation 'com.google.code.gson:gson:2.8.6'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl 사용할 경로 지정합니다. 현재 지정한 부분은 .gitignore에 포함되므로 git에 올라가지 않습니다.
def querydslDir = "$buildDir/generated/'querydsl'"

// JPA 사용여부 및 사용 경로 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// build시 사용할 sourceSet 추가 설정
sourceSets {
    main.java.srcDir querydslDir
}


// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// querydsl이 compileClassPath를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}